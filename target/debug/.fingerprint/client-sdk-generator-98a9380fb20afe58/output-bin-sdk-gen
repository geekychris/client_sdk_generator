{"$message_type":"diagnostic","message":"unused variable: `name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":4347,"byte_end":4351,"line_start":103,"line_end":103,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"            for (name, security_ref) in &components.security_schemes {","highlight_start":18,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":4347,"byte_end":4351,"line_start":103,"line_end":103,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"            for (name, security_ref) in &components.security_schemes {","highlight_start":18,"highlight_end":22}],"label":null,"suggested_replacement":"_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:103:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            for (name, security_ref) in &components.security_schemes {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_name`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `language`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/core/config.rs","byte_start":6787,"byte_end":6795,"line_start":261,"line_end":261,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"    fn default_for(language: TargetLanguage) -> Self {","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/core/config.rs","byte_start":6787,"byte_end":6795,"line_start":261,"line_end":261,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"    fn default_for(language: TargetLanguage) -> Self {","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":"_language","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `language`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/config.rs:261:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn default_for(language: TargetLanguage) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_language`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `config`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/core/features.rs","byte_start":18668,"byte_end":18674,"line_start":578,"line_end":578,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"    fn generate_go_telemetry(&self, config: &TelemetryConfig) -> FeatureCode {","highlight_start":37,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/core/features.rs","byte_start":18668,"byte_end":18674,"line_start":578,"line_end":578,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"    fn generate_go_telemetry(&self, config: &TelemetryConfig) -> FeatureCode {","highlight_start":37,"highlight_end":43}],"label":null,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `config`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/features.rs:578:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m578\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn generate_go_telemetry(&self, config: &TelemetryConfig) -> FeatureCode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_config`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `config`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/core/features.rs","byte_start":22909,"byte_end":22915,"line_start":736,"line_end":736,"column_start":45,"column_end":51,"is_primary":true,"text":[{"text":"    fn generate_typescript_telemetry(&self, config: &TelemetryConfig) -> FeatureCode {","highlight_start":45,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/core/features.rs","byte_start":22909,"byte_end":22915,"line_start":736,"line_end":736,"column_start":45,"column_end":51,"is_primary":true,"text":[{"text":"    fn generate_typescript_telemetry(&self, config: &TelemetryConfig) -> FeatureCode {","highlight_start":45,"highlight_end":51}],"label":null,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `config`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/features.rs:736:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m736\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn generate_typescript_telemetry(&self, config: &TelemetryConfig) -> FeatureCode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_config`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `type_ref`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/core/template.rs","byte_start":7410,"byte_end":7418,"line_start":206,"line_end":206,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let type_ref = h.param(0)","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/core/template.rs","byte_start":7410,"byte_end":7418,"line_start":206,"line_end":206,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let type_ref = h.param(0)","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"_type_ref","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `type_ref`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/template.rs:206:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let type_ref = h.param(0)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_type_ref`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `language`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/core/template.rs","byte_start":7544,"byte_end":7552,"line_start":209,"line_end":209,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let language = ctx.data()[\"language\"].as_str()","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/core/template.rs","byte_start":7544,"byte_end":7552,"line_start":209,"line_end":209,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let language = ctx.data()[\"language\"].as_str()","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"_language","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `language`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/template.rs:209:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let language = ctx.data()[\"language\"].as_str()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_language`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `h`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/core/template.rs","byte_start":12140,"byte_end":12141,"line_start":367,"line_end":367,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    h: &Helper,","highlight_start":5,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/core/template.rs","byte_start":12140,"byte_end":12141,"line_start":367,"line_end":367,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    h: &Helper,","highlight_start":5,"highlight_end":6}],"label":null,"suggested_replacement":"_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `h`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/template.rs:367:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    h: &Helper,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_h`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `h`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/core/template.rs","byte_start":12475,"byte_end":12476,"line_start":380,"line_end":380,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    h: &Helper,","highlight_start":5,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/core/template.rs","byte_start":12475,"byte_end":12476,"line_start":380,"line_end":380,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    h: &Helper,","highlight_start":5,"highlight_end":6}],"label":null,"suggested_replacement":"_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `h`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/template.rs:380:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    h: &Helper,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_h`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `output_path`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/test_generators/java.rs","byte_start":18689,"byte_end":18700,"line_start":630,"line_end":630,"column_start":86,"column_end":97,"is_primary":true,"text":[{"text":"    fn generate_test_suite(&self, api_spec: &ApiSpec, config: &TestGenerationConfig, output_path: &PathBuf) -> Result<TestSuite> {","highlight_start":86,"highlight_end":97}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/generators/test_generators/java.rs","byte_start":18689,"byte_end":18700,"line_start":630,"line_end":630,"column_start":86,"column_end":97,"is_primary":true,"text":[{"text":"    fn generate_test_suite(&self, api_spec: &ApiSpec, config: &TestGenerationConfig, output_path: &PathBuf) -> Result<TestSuite> {","highlight_start":86,"highlight_end":97}],"label":null,"suggested_replacement":"_output_path","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `output_path`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/test_generators/java.rs:630:86\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m630\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn generate_test_suite(&self, api_spec: &ApiSpec, config: &TestGenerationConfig, output_path: &PathBuf) -> Result<TestSuite> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_output_path`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `arr`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":10845,"byte_end":10848,"line_start":244,"line_end":244,"column_start":42,"column_end":45,"is_primary":true,"text":[{"text":"            SchemaKind::Type(Type::Array(arr)) => {","highlight_start":42,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":10845,"byte_end":10848,"line_start":244,"line_end":244,"column_start":42,"column_end":45,"is_primary":true,"text":[{"text":"            SchemaKind::Type(Type::Array(arr)) => {","highlight_start":42,"highlight_end":45}],"label":null,"suggested_replacement":"_arr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `arr`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:244:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            SchemaKind::Type(Type::Array(arr)) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_arr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `one_of`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":11012,"byte_end":11018,"line_start":248,"line_end":248,"column_start":33,"column_end":39,"is_primary":true,"text":[{"text":"            SchemaKind::OneOf { one_of } => {","highlight_start":33,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try ignoring the field","code":null,"level":"help","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":11012,"byte_end":11018,"line_start":248,"line_end":248,"column_start":33,"column_end":39,"is_primary":true,"text":[{"text":"            SchemaKind::OneOf { one_of } => {","highlight_start":33,"highlight_end":39}],"label":null,"suggested_replacement":"one_of: _","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `one_of`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:248:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            SchemaKind::OneOf { one_of } => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try ignoring the field: `one_of: _`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `all_of`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":11164,"byte_end":11170,"line_start":252,"line_end":252,"column_start":33,"column_end":39,"is_primary":true,"text":[{"text":"            SchemaKind::AllOf { all_of } => {","highlight_start":33,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try ignoring the field","code":null,"level":"help","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":11164,"byte_end":11170,"line_start":252,"line_end":252,"column_start":33,"column_end":39,"is_primary":true,"text":[{"text":"            SchemaKind::AllOf { all_of } => {","highlight_start":33,"highlight_end":39}],"label":null,"suggested_replacement":"all_of: _","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `all_of`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:252:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            SchemaKind::AllOf { all_of } => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try ignoring the field: `all_of: _`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"methods `get_tests_directory` and `get_test_file_path` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/core/generator.rs","byte_start":771,"byte_end":788,"line_start":24,"line_end":24,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"impl SdkGenerator {","highlight_start":1,"highlight_end":18}],"label":"methods in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/core/generator.rs","byte_start":24755,"byte_end":24774,"line_start":567,"line_end":567,"column_start":8,"column_end":27,"is_primary":true,"text":[{"text":"    fn get_tests_directory(&self, output_path: &PathBuf) -> PathBuf {","highlight_start":8,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/core/generator.rs","byte_start":25392,"byte_end":25410,"line_start":583,"line_end":583,"column_start":8,"column_end":26,"is_primary":true,"text":[{"text":"    fn get_test_file_path(&self, tests_dir: &PathBuf) -> PathBuf {","highlight_start":8,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: methods `get_tests_directory` and `get_test_file_path` are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:567:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl SdkGenerator {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethods in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m567\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_tests_directory(&self, output_path: &PathBuf) -> PathBuf {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m583\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_test_file_path(&self, tests_dir: &PathBuf) -> PathBuf {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `list_templates` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/core/template.rs","byte_start":446,"byte_end":465,"line_start":17,"line_end":17,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"impl TemplateEngine {","highlight_start":1,"highlight_end":20}],"label":"method in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/core/template.rs","byte_start":4767,"byte_end":4781,"line_start":99,"line_end":99,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn list_templates(&self) -> Vec<String> {","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `list_templates` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/template.rs:99:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl TemplateEngine {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn list_templates(&self) -> Vec<String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"methods `get_operation_by_id` and `get_type_by_name` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/core/types.rs","byte_start":4156,"byte_end":4168,"line_start":181,"line_end":181,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"impl ApiSpec {","highlight_start":1,"highlight_end":13}],"label":"methods in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/core/types.rs","byte_start":4690,"byte_end":4709,"line_start":202,"line_end":202,"column_start":12,"column_end":31,"is_primary":true,"text":[{"text":"    pub fn get_operation_by_id(&self, id: &str) -> Option<&Operation> {","highlight_start":12,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/core/types.rs","byte_start":4827,"byte_end":4843,"line_start":206,"line_end":206,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn get_type_by_name(&self, name: &str) -> Option<&TypeDefinition> {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: methods `get_operation_by_id` and `get_type_by_name` are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/types.rs:202:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl ApiSpec {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethods in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_operation_by_id(&self, id: &str) -> Option<&Operation> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_type_by_name(&self, name: &str) -> Option<&TypeDefinition> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"associated items `integer`, `boolean`, and `nullable` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/core/types.rs","byte_start":4952,"byte_end":4970,"line_start":211,"line_end":211,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"impl TypeReference {","highlight_start":1,"highlight_end":19}],"label":"associated items in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/core/types.rs","byte_start":5190,"byte_end":5197,"line_start":221,"line_end":221,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn integer() -> Self {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/core/types.rs","byte_start":5398,"byte_end":5405,"line_start":230,"line_end":230,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn boolean() -> Self {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/core/types.rs","byte_start":6078,"byte_end":6086,"line_start":257,"line_end":257,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn nullable(mut self) -> Self {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated items `integer`, `boolean`, and `nullable` are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/types.rs:221:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl TypeReference {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated items in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn integer() -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn boolean() -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn nullable(mut self) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `target_language` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/core/test_generation.rs","byte_start":3198,"byte_end":3211,"line_start":134,"line_end":134,"column_start":11,"column_end":24,"is_primary":false,"text":[{"text":"pub trait TestGenerator {","highlight_start":11,"highlight_end":24}],"label":"method in this trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/core/test_generation.rs","byte_start":4483,"byte_end":4498,"line_start":178,"line_end":178,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"    fn target_language(&self) -> TargetLanguage;","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `target_language` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/test_generation.rs:178:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait TestGenerator {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod in this trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn target_language(&self) -> TargetLanguage;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"associated function `map_type_to_python` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/python.rs","byte_start":156,"byte_end":176,"line_start":8,"line_end":8,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"impl PythonGenerator {","highlight_start":1,"highlight_end":21}],"label":"associated function in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/python.rs","byte_start":241,"byte_end":259,"line_start":13,"line_end":13,"column_start":12,"column_end":30,"is_primary":true,"text":[{"text":"    pub fn map_type_to_python(base_type: &crate::core::types::BaseType) -> String {","highlight_start":12,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `map_type_to_python` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/python.rs:13:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl PythonGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated function in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn map_type_to_python(base_type: &crate::core::types::BaseType) -> String {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"associated function `map_type_to_rust` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/rust.rs","byte_start":152,"byte_end":170,"line_start":8,"line_end":8,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"impl RustGenerator {","highlight_start":1,"highlight_end":19}],"label":"associated function in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/rust.rs","byte_start":235,"byte_end":251,"line_start":13,"line_end":13,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn map_type_to_rust(base_type: &crate::core::types::BaseType) -> String {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `map_type_to_rust` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/rust.rs:13:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl RustGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated function in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn map_type_to_rust(base_type: &crate::core::types::BaseType) -> String {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct `GoGenerator` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/go.rs","byte_start":318,"byte_end":329,"line_start":13,"line_end":13,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"pub struct GoGenerator {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `GoGenerator` is never constructed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/go.rs:13:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct GoGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"multiple associated items are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/go.rs","byte_start":401,"byte_end":417,"line_start":18,"line_end":18,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"impl GoGenerator {","highlight_start":1,"highlight_end":17}],"label":"associated items in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":431,"byte_end":434,"line_start":19,"line_end":19,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(config: GeneratorConfig) -> Result<Self> {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":642,"byte_end":650,"line_start":24,"line_end":24,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    pub async fn generate(&self, api_spec: &ApiSpec, output_path: &Path) -> Result<()> {","highlight_start":18,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":5078,"byte_end":5093,"line_start":117,"line_end":117,"column_start":14,"column_end":29,"is_primary":true,"text":[{"text":"    async fn generate_client(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {","highlight_start":14,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":5476,"byte_end":5490,"line_start":125,"line_end":125,"column_start":14,"column_end":28,"is_primary":true,"text":[{"text":"    async fn generate_types(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {","highlight_start":14,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":5871,"byte_end":5886,"line_start":133,"line_end":133,"column_start":14,"column_end":29,"is_primary":true,"text":[{"text":"    async fn generate_go_mod(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {","highlight_start":14,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":6263,"byte_end":6278,"line_start":141,"line_end":141,"column_start":14,"column_end":29,"is_primary":true,"text":[{"text":"    async fn generate_readme(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {","highlight_start":14,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":6655,"byte_end":6671,"line_start":149,"line_end":149,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"    fn get_package_name(&self) -> String {","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":6908,"byte_end":6921,"line_start":156,"line_end":156,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":"    fn get_go_module(&self) -> String {","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":7021,"byte_end":7035,"line_start":160,"line_end":160,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":"    fn map_type_to_go(&self, type_ref: &TypeReference) -> String {","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":8156,"byte_end":8178,"line_start":191,"line_end":191,"column_start":8,"column_end":30,"is_primary":true,"text":[{"text":"    fn infer_response_type_go(&self, operation: &crate::core::types::Operation) -> String {","highlight_start":8,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: multiple associated items are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/go.rs:19:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl GoGenerator {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated items in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(config: GeneratorConfig) -> Result<Self> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub async fn generate(&self, api_spec: &ApiSpec, output_path: &Path) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn generate_client(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn generate_types(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn generate_go_mod(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn generate_readme(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_package_name(&self) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_go_module(&self) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn map_type_to_go(&self, type_ref: &TypeReference) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn infer_response_type_go(&self, operation: &crate::core::types::Operation) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `to_go_name` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/go.rs","byte_start":8764,"byte_end":8774,"line_start":208,"line_end":208,"column_start":4,"column_end":14,"is_primary":true,"text":[{"text":"fn to_go_name(name: &str) -> String {","highlight_start":4,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `to_go_name` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/go.rs:208:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn to_go_name(name: &str) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct `TypeScriptGenerator` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/typescript.rs","byte_start":340,"byte_end":359,"line_start":13,"line_end":13,"column_start":12,"column_end":31,"is_primary":true,"text":[{"text":"pub struct TypeScriptGenerator {","highlight_start":12,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `TypeScriptGenerator` is never constructed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/typescript.rs:13:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct TypeScriptGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"multiple associated items are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/typescript.rs","byte_start":431,"byte_end":455,"line_start":18,"line_end":18,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"impl TypeScriptGenerator {","highlight_start":1,"highlight_end":25}],"label":"associated items in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":469,"byte_end":472,"line_start":19,"line_end":19,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(config: GeneratorConfig) -> Result<Self> {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":680,"byte_end":688,"line_start":24,"line_end":24,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    pub async fn generate(&self, api_spec: &ApiSpec, output_path: &Path) -> Result<()> {","highlight_start":18,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":5773,"byte_end":5788,"line_start":125,"line_end":125,"column_start":14,"column_end":29,"is_primary":true,"text":[{"text":"    async fn generate_client(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {","highlight_start":14,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":6171,"byte_end":6185,"line_start":133,"line_end":133,"column_start":14,"column_end":28,"is_primary":true,"text":[{"text":"    async fn generate_types(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {","highlight_start":14,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":6566,"byte_end":6580,"line_start":141,"line_end":141,"column_start":14,"column_end":28,"is_primary":true,"text":[{"text":"    async fn generate_index(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {","highlight_start":14,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":6961,"byte_end":6982,"line_start":149,"line_end":149,"column_start":14,"column_end":35,"is_primary":true,"text":[{"text":"    async fn generate_package_json(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {","highlight_start":14,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":7371,"byte_end":7388,"line_start":157,"line_end":157,"column_start":14,"column_end":31,"is_primary":true,"text":[{"text":"    async fn generate_tsconfig(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {","highlight_start":14,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":7779,"byte_end":7794,"line_start":165,"line_end":165,"column_start":14,"column_end":29,"is_primary":true,"text":[{"text":"    async fn generate_readme(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {","highlight_start":14,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":8171,"byte_end":8187,"line_start":173,"line_end":173,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"    fn get_package_name(&self) -> String {","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":8428,"byte_end":8442,"line_start":180,"line_end":180,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":"    fn get_class_name(&self, api_name: &str) -> String {","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":8546,"byte_end":8568,"line_start":184,"line_end":184,"column_start":8,"column_end":30,"is_primary":true,"text":[{"text":"    fn map_type_to_typescript(&self, type_ref: &TypeReference) -> String {","highlight_start":8,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":9719,"byte_end":9749,"line_start":215,"line_end":215,"column_start":8,"column_end":38,"is_primary":true,"text":[{"text":"    fn infer_response_type_typescript(&self, operation: &crate::core::types::Operation) -> String {","highlight_start":8,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: multiple associated items are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/typescript.rs:19:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl TypeScriptGenerator {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated items in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(config: GeneratorConfig) -> Result<Self> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub async fn generate(&self, api_spec: &ApiSpec, output_path: &Path) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn generate_client(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn generate_types(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn generate_index(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn generate_package_json(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn generate_tsconfig(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn generate_readme(&self, context: &HashMap<&str, serde_json::Value>, output_path: &Path) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_package_name(&self) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_class_name(&self, api_name: &str) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn map_type_to_typescript(&self, type_ref: &TypeReference) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn infer_response_type_typescript(&self, operation: &crate::core::types::Operation) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `to_camel_case` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/typescript.rs","byte_start":10327,"byte_end":10340,"line_start":232,"line_end":232,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn to_camel_case(name: &str) -> String {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `to_camel_case` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/typescript.rs:232:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn to_camel_case(name: &str) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `to_pascal_case` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/typescript.rs","byte_start":10633,"byte_end":10647,"line_start":245,"line_end":245,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn to_pascal_case(name: &str) -> String {","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `to_pascal_case` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/typescript.rs:245:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn to_pascal_case(name: &str) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `java_generator` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/test_generators/java.rs","byte_start":342,"byte_end":359,"line_start":12,"line_end":12,"column_start":12,"column_end":29,"is_primary":false,"text":[{"text":"pub struct JavaTestGenerator {","highlight_start":12,"highlight_end":29}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/test_generators/java.rs","byte_start":366,"byte_end":380,"line_start":13,"line_end":13,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    java_generator: JavaGenerator,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `java_generator` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/test_generators/java.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct JavaTestGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    java_generator: JavaGenerator,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `schema_cache` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":500,"byte_end":513,"line_start":15,"line_end":15,"column_start":12,"column_end":25,"is_primary":false,"text":[{"text":"pub struct OpenApiParser {","highlight_start":12,"highlight_end":25}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parsers/openapi.rs","byte_start":557,"byte_end":569,"line_start":17,"line_end":17,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    schema_cache: HashMap<String, Schema>,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `schema_cache` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OpenApiParser {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // Cache for resolved references\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    schema_cache: HashMap<String, Schema>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&PathBuf` instead of `&Path` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","spans":[{"file_name":"src/core/generator.rs","byte_start":7779,"byte_end":7787,"line_start":205,"line_end":205,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"        output_path: &PathBuf,","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::ptr_arg)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/core/generator.rs","byte_start":7779,"byte_end":7787,"line_start":205,"line_end":205,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"        output_path: &PathBuf,","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":"&Path","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:205:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        output_path: &PathBuf,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `&Path`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::ptr_arg)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&PathBuf` instead of `&Path` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","spans":[{"file_name":"src/core/generator.rs","byte_start":12958,"byte_end":12966,"line_start":305,"line_end":305,"column_start":77,"column_end":85,"is_primary":true,"text":[{"text":"    async fn generate_documentation(&self, api_spec: &ApiSpec, output_path: &PathBuf) -> Result<()> {","highlight_start":77,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/core/generator.rs","byte_start":12958,"byte_end":12966,"line_start":305,"line_end":305,"column_start":77,"column_end":85,"is_primary":true,"text":[{"text":"    async fn generate_documentation(&self, api_spec: &ApiSpec, output_path: &PathBuf) -> Result<()> {","highlight_start":77,"highlight_end":85}],"label":null,"suggested_replacement":"&Path","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:305:77\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m305\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn generate_documentation(&self, api_spec: &ApiSpec, output_path: &PathBuf) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `&Path`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&PathBuf` instead of `&Path` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","spans":[{"file_name":"src/core/generator.rs","byte_start":20000,"byte_end":20008,"line_start":471,"line_end":471,"column_start":49,"column_end":57,"is_primary":true,"text":[{"text":"    fn get_client_file_path(&self, output_path: &PathBuf) -> PathBuf {","highlight_start":49,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/core/generator.rs","byte_start":20000,"byte_end":20008,"line_start":471,"line_end":471,"column_start":49,"column_end":57,"is_primary":true,"text":[{"text":"    fn get_client_file_path(&self, output_path: &PathBuf) -> PathBuf {","highlight_start":49,"highlight_end":57}],"label":null,"suggested_replacement":"&Path","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:471:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m471\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_client_file_path(&self, output_path: &PathBuf) -> PathBuf {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `&Path`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&PathBuf` instead of `&Path` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","spans":[{"file_name":"src/core/generator.rs","byte_start":20978,"byte_end":20986,"line_start":491,"line_end":491,"column_start":55,"column_end":63,"is_primary":true,"text":[{"text":"    fn get_async_client_file_path(&self, output_path: &PathBuf) -> PathBuf {","highlight_start":55,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/core/generator.rs","byte_start":20978,"byte_end":20986,"line_start":491,"line_end":491,"column_start":55,"column_end":63,"is_primary":true,"text":[{"text":"    fn get_async_client_file_path(&self, output_path: &PathBuf) -> PathBuf {","highlight_start":55,"highlight_end":63}],"label":null,"suggested_replacement":"&Path","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:491:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m491\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_async_client_file_path(&self, output_path: &PathBuf) -> PathBuf {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `&Path`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&PathBuf` instead of `&Path` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","spans":[{"file_name":"src/core/generator.rs","byte_start":21979,"byte_end":21987,"line_start":511,"line_end":511,"column_start":49,"column_end":57,"is_primary":true,"text":[{"text":"    fn get_config_file_path(&self, output_path: &PathBuf) -> PathBuf {","highlight_start":49,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/core/generator.rs","byte_start":21979,"byte_end":21987,"line_start":511,"line_end":511,"column_start":49,"column_end":57,"is_primary":true,"text":[{"text":"    fn get_config_file_path(&self, output_path: &PathBuf) -> PathBuf {","highlight_start":49,"highlight_end":57}],"label":null,"suggested_replacement":"&Path","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:511:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m511\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_config_file_path(&self, output_path: &PathBuf) -> PathBuf {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `&Path`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&PathBuf` instead of `&Path` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","spans":[{"file_name":"src/core/generator.rs","byte_start":22957,"byte_end":22965,"line_start":531,"line_end":531,"column_start":49,"column_end":57,"is_primary":true,"text":[{"text":"    fn get_models_directory(&self, output_path: &PathBuf) -> PathBuf {","highlight_start":49,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/core/generator.rs","byte_start":22957,"byte_end":22965,"line_start":531,"line_end":531,"column_start":49,"column_end":57,"is_primary":true,"text":[{"text":"    fn get_models_directory(&self, output_path: &PathBuf) -> PathBuf {","highlight_start":49,"highlight_end":57}],"label":null,"suggested_replacement":"&Path","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:531:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m531\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_models_directory(&self, output_path: &PathBuf) -> PathBuf {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `&Path`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&PathBuf` instead of `&Path` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","spans":[{"file_name":"src/core/generator.rs","byte_start":23910,"byte_end":23918,"line_start":551,"line_end":551,"column_start":47,"column_end":55,"is_primary":true,"text":[{"text":"    fn get_model_file_path(&self, models_dir: &PathBuf, model_name: &str) -> PathBuf {","highlight_start":47,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/core/generator.rs","byte_start":23910,"byte_end":23918,"line_start":551,"line_end":551,"column_start":47,"column_end":55,"is_primary":true,"text":[{"text":"    fn get_model_file_path(&self, models_dir: &PathBuf, model_name: &str) -> PathBuf {","highlight_start":47,"highlight_end":55}],"label":null,"suggested_replacement":"&Path","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:551:47\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m551\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_model_file_path(&self, models_dir: &PathBuf, model_name: &str) -> PathBuf {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `&Path`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&PathBuf` instead of `&Path` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","spans":[{"file_name":"src/core/generator.rs","byte_start":24795,"byte_end":24803,"line_start":567,"line_end":567,"column_start":48,"column_end":56,"is_primary":true,"text":[{"text":"    fn get_tests_directory(&self, output_path: &PathBuf) -> PathBuf {","highlight_start":48,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/core/generator.rs","byte_start":24795,"byte_end":24803,"line_start":567,"line_end":567,"column_start":48,"column_end":56,"is_primary":true,"text":[{"text":"    fn get_tests_directory(&self, output_path: &PathBuf) -> PathBuf {","highlight_start":48,"highlight_end":56}],"label":null,"suggested_replacement":"&Path","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:567:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m567\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_tests_directory(&self, output_path: &PathBuf) -> PathBuf {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `&Path`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&PathBuf` instead of `&Path` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","spans":[{"file_name":"src/core/generator.rs","byte_start":25429,"byte_end":25437,"line_start":583,"line_end":583,"column_start":45,"column_end":53,"is_primary":true,"text":[{"text":"    fn get_test_file_path(&self, tests_dir: &PathBuf) -> PathBuf {","highlight_start":45,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/core/generator.rs","byte_start":25429,"byte_end":25437,"line_start":583,"line_end":583,"column_start":45,"column_end":53,"is_primary":true,"text":[{"text":"    fn get_test_file_path(&self, tests_dir: &PathBuf) -> PathBuf {","highlight_start":45,"highlight_end":53}],"label":null,"suggested_replacement":"&Path","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:583:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m583\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_test_file_path(&self, tests_dir: &PathBuf) -> PathBuf {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `&Path`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&PathBuf` instead of `&Path` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","spans":[{"file_name":"src/core/test_generation.rs","byte_start":3409,"byte_end":3417,"line_start":140,"line_end":140,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"        output_path: &PathBuf,","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/core/test_generation.rs","byte_start":3409,"byte_end":3417,"line_start":140,"line_end":140,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"        output_path: &PathBuf,","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":"&Path","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/test_generation.rs:140:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        output_path: &PathBuf,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `&Path`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"parameter is only used in recursion","code":{"code":"clippy::only_used_in_recursion","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/go.rs","byte_start":7037,"byte_end":7041,"line_start":160,"line_end":160,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"    fn map_type_to_go(&self, type_ref: &TypeReference) -> String {","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"parameter used here","code":null,"level":"note","spans":[{"file_name":"src/generators/go.rs","byte_start":7697,"byte_end":7701,"line_start":174,"line_end":174,"column_start":62,"column_end":66,"is_primary":true,"text":[{"text":"            BaseType::Array(inner) => return format!(\"[]{}\", self.map_type_to_go(inner)),","highlight_start":62,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":7795,"byte_end":7799,"line_start":175,"line_end":175,"column_start":70,"column_end":74,"is_primary":true,"text":[{"text":"            BaseType::Map(key, value) => return format!(\"map[{}]{}\", self.map_type_to_go(key), self.map_type_to_go(value)),","highlight_start":70,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":7821,"byte_end":7825,"line_start":175,"line_end":175,"column_start":96,"column_end":100,"is_primary":true,"text":[{"text":"            BaseType::Map(key, value) => return format!(\"map[{}]{}\", self.map_type_to_go(key), self.map_type_to_go(value)),","highlight_start":96,"highlight_end":100}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::only_used_in_recursion)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: parameter is only used in recursion\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/go.rs:160:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn map_type_to_go(&self, type_ref: &TypeReference) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: parameter used here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/go.rs:174:62\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            BaseType::Array(inner) => return format!(\"[]{}\", self.map_type_to_go(inner)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            BaseType::Map(key, value) => return format!(\"map[{}]{}\", self.map_type_to_go(key), self.map_type_to_go(value)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::only_used_in_recursion)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"parameter is only used in recursion","code":{"code":"clippy::only_used_in_recursion","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/typescript.rs","byte_start":8570,"byte_end":8574,"line_start":184,"line_end":184,"column_start":32,"column_end":36,"is_primary":true,"text":[{"text":"    fn map_type_to_typescript(&self, type_ref: &TypeReference) -> String {","highlight_start":32,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"parameter used here","code":null,"level":"note","spans":[{"file_name":"src/generators/typescript.rs","byte_start":9244,"byte_end":9248,"line_start":198,"line_end":198,"column_start":62,"column_end":66,"is_primary":true,"text":[{"text":"            BaseType::Array(inner) => return format!(\"{}[]\", self.map_type_to_typescript(inner)),","highlight_start":62,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":9355,"byte_end":9359,"line_start":199,"line_end":199,"column_start":75,"column_end":79,"is_primary":true,"text":[{"text":"            BaseType::Map(key, value) => return format!(\"Record<{}, {}>\", self.map_type_to_typescript(key), self.map_type_to_typescript(value)),","highlight_start":75,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":9389,"byte_end":9393,"line_start":199,"line_end":199,"column_start":109,"column_end":113,"is_primary":true,"text":[{"text":"            BaseType::Map(key, value) => return format!(\"Record<{}, {}>\", self.map_type_to_typescript(key), self.map_type_to_typescript(value)),","highlight_start":109,"highlight_end":113}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: parameter is only used in recursion\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/typescript.rs:184:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn map_type_to_typescript(&self, type_ref: &TypeReference) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: parameter used here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/typescript.rs:198:62\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            BaseType::Array(inner) => return format!(\"{}[]\", self.map_type_to_typescript(inner)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            BaseType::Map(key, value) => return format!(\"Record<{}, {}>\", self.map_type_to_typescript(key), self.map_type_to_typescript(value)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"calls to `push` immediately after creation","code":{"code":"clippy::vec_init_then_push","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/test_generators/java.rs","byte_start":17001,"byte_end":18525,"line_start":581,"line_end":623,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        let mut config_files = vec![];","highlight_start":9,"highlight_end":39},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // JUnit 5 configuration","highlight_start":1,"highlight_end":33},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"junit-platform.properties\".to_string(),","highlight_start":1,"highlight_end":59},{"text":"            path: PathBuf::from(\"src/test/resources/junit-platform.properties\"),","highlight_start":1,"highlight_end":81},{"text":"            content: r#\"# JUnit 5 Configuration","highlight_start":1,"highlight_end":48},{"text":"# Generated by SDK Generator","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"junit.jupiter.testinstance.lifecycle.default=per_class","highlight_start":1,"highlight_end":55},{"text":"junit.jupiter.execution.parallel.enabled=true","highlight_start":1,"highlight_end":46},{"text":"junit.jupiter.execution.parallel.mode.default=same_thread","highlight_start":1,"highlight_end":58},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Mockito configuration","highlight_start":1,"highlight_end":33},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"mockito-extensions\".to_string(),","highlight_start":1,"highlight_end":52},{"text":"            path: PathBuf::from(\"src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker\"),","highlight_start":1,"highlight_end":104},{"text":"            content: \"mock-maker-inline\\n\".to_string(),","highlight_start":1,"highlight_end":56},{"text":"        });","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Test logging configuration","highlight_start":1,"highlight_end":38},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"logback-test.xml\".to_string(),","highlight_start":1,"highlight_end":50},{"text":"            path: PathBuf::from(\"src/test/resources/logback-test.xml\"),","highlight_start":1,"highlight_end":72},{"text":"            content: r#\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>","highlight_start":1,"highlight_end":63},{"text":"<configuration>","highlight_start":1,"highlight_end":16},{"text":"    <appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">","highlight_start":1,"highlight_end":74},{"text":"        <encoder>","highlight_start":1,"highlight_end":18},{"text":"            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>","highlight_start":1,"highlight_end":88},{"text":"        </encoder>","highlight_start":1,"highlight_end":19},{"text":"    </appender>","highlight_start":1,"highlight_end":16},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    <root level=\"INFO\">","highlight_start":1,"highlight_end":24},{"text":"        <appender-ref ref=\"CONSOLE\"/>","highlight_start":1,"highlight_end":38},{"text":"    </root>","highlight_start":1,"highlight_end":12},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    <!-- Set test-specific log levels -->","highlight_start":1,"highlight_end":42},{"text":"    <logger name=\"com.example.client\" level=\"DEBUG\"/>","highlight_start":1,"highlight_end":54},{"text":"</configuration>","highlight_start":1,"highlight_end":17},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::vec_init_then_push)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using the `vec![]` macro","code":null,"level":"help","spans":[{"file_name":"src/generators/test_generators/java.rs","byte_start":17001,"byte_end":18525,"line_start":581,"line_end":623,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        let mut config_files = vec![];","highlight_start":9,"highlight_end":39},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // JUnit 5 configuration","highlight_start":1,"highlight_end":33},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"junit-platform.properties\".to_string(),","highlight_start":1,"highlight_end":59},{"text":"            path: PathBuf::from(\"src/test/resources/junit-platform.properties\"),","highlight_start":1,"highlight_end":81},{"text":"            content: r#\"# JUnit 5 Configuration","highlight_start":1,"highlight_end":48},{"text":"# Generated by SDK Generator","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"junit.jupiter.testinstance.lifecycle.default=per_class","highlight_start":1,"highlight_end":55},{"text":"junit.jupiter.execution.parallel.enabled=true","highlight_start":1,"highlight_end":46},{"text":"junit.jupiter.execution.parallel.mode.default=same_thread","highlight_start":1,"highlight_end":58},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Mockito configuration","highlight_start":1,"highlight_end":33},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"mockito-extensions\".to_string(),","highlight_start":1,"highlight_end":52},{"text":"            path: PathBuf::from(\"src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker\"),","highlight_start":1,"highlight_end":104},{"text":"            content: \"mock-maker-inline\\n\".to_string(),","highlight_start":1,"highlight_end":56},{"text":"        });","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Test logging configuration","highlight_start":1,"highlight_end":38},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"logback-test.xml\".to_string(),","highlight_start":1,"highlight_end":50},{"text":"            path: PathBuf::from(\"src/test/resources/logback-test.xml\"),","highlight_start":1,"highlight_end":72},{"text":"            content: r#\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>","highlight_start":1,"highlight_end":63},{"text":"<configuration>","highlight_start":1,"highlight_end":16},{"text":"    <appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">","highlight_start":1,"highlight_end":74},{"text":"        <encoder>","highlight_start":1,"highlight_end":18},{"text":"            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>","highlight_start":1,"highlight_end":88},{"text":"        </encoder>","highlight_start":1,"highlight_end":19},{"text":"    </appender>","highlight_start":1,"highlight_end":16},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    <root level=\"INFO\">","highlight_start":1,"highlight_end":24},{"text":"        <appender-ref ref=\"CONSOLE\"/>","highlight_start":1,"highlight_end":38},{"text":"    </root>","highlight_start":1,"highlight_end":12},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    <!-- Set test-specific log levels -->","highlight_start":1,"highlight_end":42},{"text":"    <logger name=\"com.example.client\" level=\"DEBUG\"/>","highlight_start":1,"highlight_end":54},{"text":"</configuration>","highlight_start":1,"highlight_end":17},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12}],"label":null,"suggested_replacement":"let config_files = vec![..];","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: calls to `push` immediately after creation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/test_generators/java.rs:581:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m581\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut config_files = vec![];\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m582\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m583\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        // JUnit 5 configuration\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m584\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        config_files.push(ConfigFile {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m622\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\"#.to_string(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m623\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        });\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|___________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using the `vec![]` macro: `let config_files = vec![..];`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::vec_init_then_push)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"calls to `push` immediately after creation","code":{"code":"clippy::vec_init_then_push","explanation":null},"level":"warning","spans":[{"file_name":"src/generators/test_generators/typescript.rs","byte_start":11848,"byte_end":13317,"line_start":402,"line_end":466,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        let mut config_files = vec![];","highlight_start":9,"highlight_end":39},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Jest configuration","highlight_start":1,"highlight_end":30},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"jest.config.js\".to_string(),","highlight_start":1,"highlight_end":48},{"text":"            path: PathBuf::from(\"jest.config.js\"),","highlight_start":1,"highlight_end":51},{"text":"            content: r#\"/** @type {import('jest').Config} */","highlight_start":1,"highlight_end":61},{"text":"module.exports = {","highlight_start":1,"highlight_end":19},{"text":"  preset: 'ts-jest',","highlight_start":1,"highlight_end":21},{"text":"  testEnvironment: 'node',","highlight_start":1,"highlight_end":27},{"text":"  roots: ['<rootDir>/src', '<rootDir>/tests'],","highlight_start":1,"highlight_end":47},{"text":"  testMatch: [","highlight_start":1,"highlight_end":15},{"text":"    '**/__tests__/**/*.+(ts|tsx|js)',","highlight_start":1,"highlight_end":38},{"text":"    '**/*.(test|spec).+(ts|tsx|js)'","highlight_start":1,"highlight_end":36},{"text":"  ],","highlight_start":1,"highlight_end":5},{"text":"  transform: {","highlight_start":1,"highlight_end":15},{"text":"    '^.+\\\\.(ts|tsx)$': 'ts-jest',","highlight_start":1,"highlight_end":34},{"text":"  },","highlight_start":1,"highlight_end":5},{"text":"  collectCoverageFrom: [","highlight_start":1,"highlight_end":25},{"text":"    'src/**/*.{ts,tsx}',","highlight_start":1,"highlight_end":25},{"text":"    '!src/**/*.d.ts',","highlight_start":1,"highlight_end":22},{"text":"  ],","highlight_start":1,"highlight_end":5},{"text":"  coverageDirectory: 'coverage',","highlight_start":1,"highlight_end":33},{"text":"  coverageReporters: [","highlight_start":1,"highlight_end":23},{"text":"    'text',","highlight_start":1,"highlight_end":12},{"text":"    'lcov',","highlight_start":1,"highlight_end":12},{"text":"    'html',","highlight_start":1,"highlight_end":12},{"text":"  ],","highlight_start":1,"highlight_end":5},{"text":"  coverageThreshold: {","highlight_start":1,"highlight_end":23},{"text":"    global: {","highlight_start":1,"highlight_end":14},{"text":"      branches: 80,","highlight_start":1,"highlight_end":20},{"text":"      functions: 80,","highlight_start":1,"highlight_end":21},{"text":"      lines: 80,","highlight_start":1,"highlight_end":17},{"text":"      statements: 80,","highlight_start":1,"highlight_end":22},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"  },","highlight_start":1,"highlight_end":5},{"text":"  setupFilesAfterEnv: ['<rootDir>/tests/setup.ts'],","highlight_start":1,"highlight_end":52},{"text":"};","highlight_start":1,"highlight_end":3},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Test setup file","highlight_start":1,"highlight_end":27},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"setup.ts\".to_string(),","highlight_start":1,"highlight_end":42},{"text":"            path: PathBuf::from(\"tests/setup.ts\"),","highlight_start":1,"highlight_end":51},{"text":"            content: r#\"// Test setup file","highlight_start":1,"highlight_end":43},{"text":"// Generated by SDK Generator","highlight_start":1,"highlight_end":30},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// Global test setup","highlight_start":1,"highlight_end":21},{"text":"beforeAll(() => {","highlight_start":1,"highlight_end":18},{"text":"  // Setup code that runs before all tests","highlight_start":1,"highlight_end":43},{"text":"});","highlight_start":1,"highlight_end":4},{"text":"","highlight_start":1,"highlight_end":1},{"text":"afterAll(() => {","highlight_start":1,"highlight_end":17},{"text":"  // Cleanup code that runs after all tests","highlight_start":1,"highlight_end":44},{"text":"});","highlight_start":1,"highlight_end":4},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// Mock global fetch if not available","highlight_start":1,"highlight_end":38},{"text":"if (!global.fetch) {","highlight_start":1,"highlight_end":21},{"text":"  global.fetch = jest.fn();","highlight_start":1,"highlight_end":28},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// Custom matchers or global test utilities can go here","highlight_start":1,"highlight_end":56},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using the `vec![]` macro","code":null,"level":"help","spans":[{"file_name":"src/generators/test_generators/typescript.rs","byte_start":11848,"byte_end":13317,"line_start":402,"line_end":466,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        let mut config_files = vec![];","highlight_start":9,"highlight_end":39},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Jest configuration","highlight_start":1,"highlight_end":30},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"jest.config.js\".to_string(),","highlight_start":1,"highlight_end":48},{"text":"            path: PathBuf::from(\"jest.config.js\"),","highlight_start":1,"highlight_end":51},{"text":"            content: r#\"/** @type {import('jest').Config} */","highlight_start":1,"highlight_end":61},{"text":"module.exports = {","highlight_start":1,"highlight_end":19},{"text":"  preset: 'ts-jest',","highlight_start":1,"highlight_end":21},{"text":"  testEnvironment: 'node',","highlight_start":1,"highlight_end":27},{"text":"  roots: ['<rootDir>/src', '<rootDir>/tests'],","highlight_start":1,"highlight_end":47},{"text":"  testMatch: [","highlight_start":1,"highlight_end":15},{"text":"    '**/__tests__/**/*.+(ts|tsx|js)',","highlight_start":1,"highlight_end":38},{"text":"    '**/*.(test|spec).+(ts|tsx|js)'","highlight_start":1,"highlight_end":36},{"text":"  ],","highlight_start":1,"highlight_end":5},{"text":"  transform: {","highlight_start":1,"highlight_end":15},{"text":"    '^.+\\\\.(ts|tsx)$': 'ts-jest',","highlight_start":1,"highlight_end":34},{"text":"  },","highlight_start":1,"highlight_end":5},{"text":"  collectCoverageFrom: [","highlight_start":1,"highlight_end":25},{"text":"    'src/**/*.{ts,tsx}',","highlight_start":1,"highlight_end":25},{"text":"    '!src/**/*.d.ts',","highlight_start":1,"highlight_end":22},{"text":"  ],","highlight_start":1,"highlight_end":5},{"text":"  coverageDirectory: 'coverage',","highlight_start":1,"highlight_end":33},{"text":"  coverageReporters: [","highlight_start":1,"highlight_end":23},{"text":"    'text',","highlight_start":1,"highlight_end":12},{"text":"    'lcov',","highlight_start":1,"highlight_end":12},{"text":"    'html',","highlight_start":1,"highlight_end":12},{"text":"  ],","highlight_start":1,"highlight_end":5},{"text":"  coverageThreshold: {","highlight_start":1,"highlight_end":23},{"text":"    global: {","highlight_start":1,"highlight_end":14},{"text":"      branches: 80,","highlight_start":1,"highlight_end":20},{"text":"      functions: 80,","highlight_start":1,"highlight_end":21},{"text":"      lines: 80,","highlight_start":1,"highlight_end":17},{"text":"      statements: 80,","highlight_start":1,"highlight_end":22},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"  },","highlight_start":1,"highlight_end":5},{"text":"  setupFilesAfterEnv: ['<rootDir>/tests/setup.ts'],","highlight_start":1,"highlight_end":52},{"text":"};","highlight_start":1,"highlight_end":3},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Test setup file","highlight_start":1,"highlight_end":27},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"setup.ts\".to_string(),","highlight_start":1,"highlight_end":42},{"text":"            path: PathBuf::from(\"tests/setup.ts\"),","highlight_start":1,"highlight_end":51},{"text":"            content: r#\"// Test setup file","highlight_start":1,"highlight_end":43},{"text":"// Generated by SDK Generator","highlight_start":1,"highlight_end":30},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// Global test setup","highlight_start":1,"highlight_end":21},{"text":"beforeAll(() => {","highlight_start":1,"highlight_end":18},{"text":"  // Setup code that runs before all tests","highlight_start":1,"highlight_end":43},{"text":"});","highlight_start":1,"highlight_end":4},{"text":"","highlight_start":1,"highlight_end":1},{"text":"afterAll(() => {","highlight_start":1,"highlight_end":17},{"text":"  // Cleanup code that runs after all tests","highlight_start":1,"highlight_end":44},{"text":"});","highlight_start":1,"highlight_end":4},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// Mock global fetch if not available","highlight_start":1,"highlight_end":38},{"text":"if (!global.fetch) {","highlight_start":1,"highlight_end":21},{"text":"  global.fetch = jest.fn();","highlight_start":1,"highlight_end":28},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// Custom matchers or global test utilities can go here","highlight_start":1,"highlight_end":56},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12}],"label":null,"suggested_replacement":"let config_files = vec![..];","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: calls to `push` immediately after creation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/test_generators/typescript.rs:402:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut config_files = vec![];\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m404\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        // Jest configuration\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m405\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        config_files.push(ConfigFile {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m465\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\"#.to_string(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m466\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        });\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|___________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using the `vec![]` macro: `let config_files = vec![..];`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":6680,"byte_end":7150,"line_start":155,"line_end":163,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            if let ReferenceOr::Item(request_body) = request_body_ref {","highlight_start":13,"highlight_end":72},{"text":"                if let Some(content) = request_body.content.get(\"application/json\") {","highlight_start":1,"highlight_end":86},{"text":"                    if let Some(schema_ref) = &content.schema {","highlight_start":1,"highlight_end":64},{"text":"                        if let ReferenceOr::Item(schema) = schema_ref {","highlight_start":1,"highlight_end":72},{"text":"                            api_operation.request_body = Some(self.parse_schema_to_type_reference(schema)?);","highlight_start":1,"highlight_end":109},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":6622,"byte_end":6638,"line_start":154,"line_end":154,"column_start":21,"column_end":37,"is_primary":true,"text":[{"text":"        if let Some(request_body_ref) = &operation.request_body {","highlight_start":21,"highlight_end":37}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parsers/openapi.rs","byte_start":6687,"byte_end":6718,"line_start":155,"line_end":155,"column_start":20,"column_end":51,"is_primary":true,"text":[{"text":"            if let ReferenceOr::Item(request_body) = request_body_ref {","highlight_start":20,"highlight_end":51}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::collapsible_match)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:155:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let ReferenceOr::Item(request_body) = request_body_ref {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Some(content) = request_body.content.get(\"application/json\") {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Some(schema_ref) = &content.schema {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        if let ReferenceOr::Item(schema) = schema_ref {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:154:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Some(request_body_ref) = &operation.request_body {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let ReferenceOr::Item(request_body) = request_body_ref {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::collapsible_match)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":6914,"byte_end":7096,"line_start":158,"line_end":160,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"                        if let ReferenceOr::Item(schema) = schema_ref {","highlight_start":25,"highlight_end":72},{"text":"                            api_operation.request_body = Some(self.parse_schema_to_type_reference(schema)?);","highlight_start":1,"highlight_end":109},{"text":"                        }","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":6858,"byte_end":6868,"line_start":157,"line_end":157,"column_start":33,"column_end":43,"is_primary":true,"text":[{"text":"                    if let Some(schema_ref) = &content.schema {","highlight_start":33,"highlight_end":43}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parsers/openapi.rs","byte_start":6921,"byte_end":6946,"line_start":158,"line_end":158,"column_start":32,"column_end":57,"is_primary":true,"text":[{"text":"                        if let ReferenceOr::Item(schema) = schema_ref {","highlight_start":32,"highlight_end":57}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:158:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        if let ReferenceOr::Item(schema) = schema_ref {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            api_operation.request_body = Some(self.parse_schema_to_type_reference(schema)?);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:157:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Some(schema_ref) = &content.schema {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        if let ReferenceOr::Item(schema) = schema_ref {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":8069,"byte_end":8247,"line_start":185,"line_end":187,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"                        if let ReferenceOr::Item(schema) = schema_ref {","highlight_start":25,"highlight_end":72},{"text":"                            api_response.data_type = Some(self.parse_schema_to_type_reference(schema)?);","highlight_start":1,"highlight_end":105},{"text":"                        }","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":8013,"byte_end":8023,"line_start":184,"line_end":184,"column_start":33,"column_end":43,"is_primary":true,"text":[{"text":"                    if let Some(schema_ref) = &content.schema {","highlight_start":33,"highlight_end":43}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parsers/openapi.rs","byte_start":8076,"byte_end":8101,"line_start":185,"line_end":185,"column_start":32,"column_end":57,"is_primary":true,"text":[{"text":"                        if let ReferenceOr::Item(schema) = schema_ref {","highlight_start":32,"highlight_end":57}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:185:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        if let ReferenceOr::Item(schema) = schema_ref {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            api_response.data_type = Some(self.parse_schema_to_type_reference(schema)?);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:184:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Some(schema_ref) = &content.schema {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        if let ReferenceOr::Item(schema) = schema_ref {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"parameter is only used in recursion","code":{"code":"clippy::only_used_in_recursion","explanation":null},"level":"warning","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":11466,"byte_end":11470,"line_start":264,"line_end":264,"column_start":40,"column_end":44,"is_primary":true,"text":[{"text":"    fn parse_schema_to_type_reference(&self, schema: &Schema) -> Result<TypeReference> {","highlight_start":40,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"parameter used here","code":null,"level":"note","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":13885,"byte_end":13889,"line_start":314,"line_end":314,"column_start":37,"column_end":41,"is_primary":true,"text":[{"text":"                    let item_type = self.parse_schema_to_type_reference(item_schema)?;","highlight_start":37,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: parameter is only used in recursion\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:264:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn parse_schema_to_type_reference(&self, schema: &Schema) -> Result<TypeReference> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: parameter used here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:314:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let item_type = self.parse_schema_to_type_reference(item_schema)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"46 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 46 warnings emitted\u001b[0m\n\n"}

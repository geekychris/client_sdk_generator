{"$message_type":"diagnostic","message":"unused import: `PathBuf`","code":{"code":"unused_imports","explanation":null},"level":"error","spans":[{"file_name":"src/generators/test_generators/mod.rs","byte_start":247,"byte_end":254,"line_start":11,"line_end":11,"column_start":23,"column_end":30,"is_primary":true,"text":[{"text":"use std::path::{Path, PathBuf};","highlight_start":23,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`-D unused-imports` implied by `-D warnings`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to override `-D warnings` add `#[allow(unused_imports)]`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/generators/test_generators/mod.rs","byte_start":245,"byte_end":254,"line_start":11,"line_end":11,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"use std::path::{Path, PathBuf};","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/generators/test_generators/mod.rs","byte_start":240,"byte_end":241,"line_start":11,"line_end":11,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"use std::path::{Path, PathBuf};","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/generators/test_generators/mod.rs","byte_start":254,"byte_end":255,"line_start":11,"line_end":11,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"use std::path::{Path, PathBuf};","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unused import: `PathBuf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/test_generators/mod.rs:11:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::path::{Path, PathBuf};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `-D unused-imports` implied by `-D warnings`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to override `-D warnings` add `#[allow(unused_imports)]`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"methods `get_tests_directory` and `get_test_file_path` are never used","code":{"code":"dead_code","explanation":null},"level":"error","spans":[{"file_name":"src/core/generator.rs","byte_start":779,"byte_end":796,"line_start":24,"line_end":24,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"impl SdkGenerator {","highlight_start":1,"highlight_end":18}],"label":"methods in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/core/generator.rs","byte_start":24742,"byte_end":24761,"line_start":567,"line_end":567,"column_start":8,"column_end":27,"is_primary":true,"text":[{"text":"    fn get_tests_directory(&self, output_path: &Path) -> PathBuf {","highlight_start":8,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/core/generator.rs","byte_start":25376,"byte_end":25394,"line_start":583,"line_end":583,"column_start":8,"column_end":26,"is_primary":true,"text":[{"text":"    fn get_test_file_path(&self, tests_dir: &Path) -> PathBuf {","highlight_start":8,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`-D dead-code` implied by `-D warnings`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to override `-D warnings` add `#[allow(dead_code)]`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: methods `get_tests_directory` and `get_test_file_path` are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:567:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl SdkGenerator {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethods in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m567\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_tests_directory(&self, output_path: &Path) -> PathBuf {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m583\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_test_file_path(&self, tests_dir: &Path) -> PathBuf {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `-D dead-code` implied by `-D warnings`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to override `-D warnings` add `#[allow(dead_code)]`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `schema_cache` is never read","code":{"code":"dead_code","explanation":null},"level":"error","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":500,"byte_end":513,"line_start":15,"line_end":15,"column_start":12,"column_end":25,"is_primary":false,"text":[{"text":"pub struct OpenApiParser {","highlight_start":12,"highlight_end":25}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parsers/openapi.rs","byte_start":557,"byte_end":569,"line_start":17,"line_end":17,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    schema_cache: HashMap<String, Schema>,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: field `schema_cache` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OpenApiParser {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // Cache for resolved references\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    schema_cache: HashMap<String, Schema>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `java_generator` is never read","code":{"code":"dead_code","explanation":null},"level":"error","spans":[{"file_name":"src/generators/test_generators/java.rs","byte_start":350,"byte_end":367,"line_start":12,"line_end":12,"column_start":12,"column_end":29,"is_primary":false,"text":[{"text":"pub struct JavaTestGenerator {","highlight_start":12,"highlight_end":29}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/test_generators/java.rs","byte_start":374,"byte_end":388,"line_start":13,"line_end":13,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    java_generator: JavaGenerator,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: field `java_generator` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/test_generators/java.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct JavaTestGenerator {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    java_generator: JavaGenerator,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&PathBuf` instead of `&Path` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"error","spans":[{"file_name":"src/core/generator.rs","byte_start":5206,"byte_end":5214,"line_start":147,"line_end":147,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"        output_path: &PathBuf,","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`-D clippy::ptr-arg` implied by `-D warnings`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to override `-D warnings` add `#[allow(clippy::ptr_arg)]`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/core/generator.rs","byte_start":5206,"byte_end":5214,"line_start":147,"line_end":147,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"        output_path: &PathBuf,","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":"&Path","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:147:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        output_path: &PathBuf,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: change this to: `&Path`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `-D clippy::ptr-arg` implied by `-D warnings`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to override `-D warnings` add `#[allow(clippy::ptr_arg)]`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&PathBuf` instead of `&Path` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"error","spans":[{"file_name":"src/core/generator.rs","byte_start":6977,"byte_end":6985,"line_start":184,"line_end":184,"column_start":75,"column_end":83,"is_primary":true,"text":[{"text":"    async fn generate_model_files(&self, api_spec: &ApiSpec, output_path: &PathBuf) -> Result<()> {","highlight_start":75,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/core/generator.rs","byte_start":6977,"byte_end":6985,"line_start":184,"line_end":184,"column_start":75,"column_end":83,"is_primary":true,"text":[{"text":"    async fn generate_model_files(&self, api_spec: &ApiSpec, output_path: &PathBuf) -> Result<()> {","highlight_start":75,"highlight_end":83}],"label":null,"suggested_replacement":"&Path","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:184:75\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn generate_model_files(&self, api_spec: &ApiSpec, output_path: &PathBuf) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: change this to: `&Path`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&PathBuf` instead of `&Path` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"error","spans":[{"file_name":"src/core/generator.rs","byte_start":10285,"byte_end":10293,"line_start":251,"line_end":251,"column_start":74,"column_end":82,"is_primary":true,"text":[{"text":"    async fn generate_test_files(&self, api_spec: &ApiSpec, output_path: &PathBuf) -> Result<()> {","highlight_start":74,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/core/generator.rs","byte_start":10285,"byte_end":10293,"line_start":251,"line_end":251,"column_start":74,"column_end":82,"is_primary":true,"text":[{"text":"    async fn generate_test_files(&self, api_spec: &ApiSpec, output_path: &PathBuf) -> Result<()> {","highlight_start":74,"highlight_end":82}],"label":null,"suggested_replacement":"&Path","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/core/generator.rs:251:74\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn generate_test_files(&self, api_spec: &ApiSpec, output_path: &PathBuf) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: change this to: `&Path`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"error","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":6681,"byte_end":7151,"line_start":155,"line_end":163,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            if let ReferenceOr::Item(request_body) = request_body_ref {","highlight_start":13,"highlight_end":72},{"text":"                if let Some(content) = request_body.content.get(\"application/json\") {","highlight_start":1,"highlight_end":86},{"text":"                    if let Some(schema_ref) = &content.schema {","highlight_start":1,"highlight_end":64},{"text":"                        if let ReferenceOr::Item(schema) = schema_ref {","highlight_start":1,"highlight_end":72},{"text":"                            api_operation.request_body = Some(self.parse_schema_to_type_reference(schema)?);","highlight_start":1,"highlight_end":109},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":6623,"byte_end":6639,"line_start":154,"line_end":154,"column_start":21,"column_end":37,"is_primary":true,"text":[{"text":"        if let Some(request_body_ref) = &operation.request_body {","highlight_start":21,"highlight_end":37}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parsers/openapi.rs","byte_start":6688,"byte_end":6719,"line_start":155,"line_end":155,"column_start":20,"column_end":51,"is_primary":true,"text":[{"text":"            if let ReferenceOr::Item(request_body) = request_body_ref {","highlight_start":20,"highlight_end":51}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`-D clippy::collapsible-match` implied by `-D warnings`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to override `-D warnings` add `#[allow(clippy::collapsible_match)]`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:155:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let ReferenceOr::Item(request_body) = request_body_ref {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Some(content) = request_body.content.get(\"application/json\") {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Some(schema_ref) = &content.schema {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        if let ReferenceOr::Item(schema) = schema_ref {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:154:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Some(request_body_ref) = &operation.request_body {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let ReferenceOr::Item(request_body) = request_body_ref {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `-D clippy::collapsible-match` implied by `-D warnings`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to override `-D warnings` add `#[allow(clippy::collapsible_match)]`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"error","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":6915,"byte_end":7097,"line_start":158,"line_end":160,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"                        if let ReferenceOr::Item(schema) = schema_ref {","highlight_start":25,"highlight_end":72},{"text":"                            api_operation.request_body = Some(self.parse_schema_to_type_reference(schema)?);","highlight_start":1,"highlight_end":109},{"text":"                        }","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":6859,"byte_end":6869,"line_start":157,"line_end":157,"column_start":33,"column_end":43,"is_primary":true,"text":[{"text":"                    if let Some(schema_ref) = &content.schema {","highlight_start":33,"highlight_end":43}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parsers/openapi.rs","byte_start":6922,"byte_end":6947,"line_start":158,"line_end":158,"column_start":32,"column_end":57,"is_primary":true,"text":[{"text":"                        if let ReferenceOr::Item(schema) = schema_ref {","highlight_start":32,"highlight_end":57}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:158:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        if let ReferenceOr::Item(schema) = schema_ref {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            api_operation.request_body = Some(self.parse_schema_to_type_reference(schema)?);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:157:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Some(schema_ref) = &content.schema {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        if let ReferenceOr::Item(schema) = schema_ref {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"error","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":8070,"byte_end":8248,"line_start":185,"line_end":187,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"                        if let ReferenceOr::Item(schema) = schema_ref {","highlight_start":25,"highlight_end":72},{"text":"                            api_response.data_type = Some(self.parse_schema_to_type_reference(schema)?);","highlight_start":1,"highlight_end":105},{"text":"                        }","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":8014,"byte_end":8024,"line_start":184,"line_end":184,"column_start":33,"column_end":43,"is_primary":true,"text":[{"text":"                    if let Some(schema_ref) = &content.schema {","highlight_start":33,"highlight_end":43}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parsers/openapi.rs","byte_start":8077,"byte_end":8102,"line_start":185,"line_end":185,"column_start":32,"column_end":57,"is_primary":true,"text":[{"text":"                        if let ReferenceOr::Item(schema) = schema_ref {","highlight_start":32,"highlight_end":57}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:185:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        if let ReferenceOr::Item(schema) = schema_ref {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            api_response.data_type = Some(self.parse_schema_to_type_reference(schema)?);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:184:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Some(schema_ref) = &content.schema {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        if let ReferenceOr::Item(schema) = schema_ref {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"parameter is only used in recursion","code":{"code":"clippy::only_used_in_recursion","explanation":null},"level":"error","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":11474,"byte_end":11478,"line_start":264,"line_end":264,"column_start":40,"column_end":44,"is_primary":true,"text":[{"text":"    fn parse_schema_to_type_reference(&self, schema: &Schema) -> Result<TypeReference> {","highlight_start":40,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"parameter used here","code":null,"level":"note","spans":[{"file_name":"src/parsers/openapi.rs","byte_start":13893,"byte_end":13897,"line_start":314,"line_end":314,"column_start":37,"column_end":41,"is_primary":true,"text":[{"text":"                    let item_type = self.parse_schema_to_type_reference(item_schema)?;","highlight_start":37,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`-D clippy::only-used-in-recursion` implied by `-D warnings`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to override `-D warnings` add `#[allow(clippy::only_used_in_recursion)]`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: parameter is only used in recursion\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:264:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn parse_schema_to_type_reference(&self, schema: &Schema) -> Result<TypeReference> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: parameter used here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parsers/openapi.rs:314:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let item_type = self.parse_schema_to_type_reference(item_schema)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `-D clippy::only-used-in-recursion` implied by `-D warnings`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to override `-D warnings` add `#[allow(clippy::only_used_in_recursion)]`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"parameter is only used in recursion","code":{"code":"clippy::only_used_in_recursion","explanation":null},"level":"error","spans":[{"file_name":"src/generators/go.rs","byte_start":7037,"byte_end":7041,"line_start":160,"line_end":160,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"    fn map_type_to_go(&self, type_ref: &TypeReference) -> String {","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"parameter used here","code":null,"level":"note","spans":[{"file_name":"src/generators/go.rs","byte_start":7697,"byte_end":7701,"line_start":174,"line_end":174,"column_start":62,"column_end":66,"is_primary":true,"text":[{"text":"            BaseType::Array(inner) => return format!(\"[]{}\", self.map_type_to_go(inner)),","highlight_start":62,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":7795,"byte_end":7799,"line_start":175,"line_end":175,"column_start":70,"column_end":74,"is_primary":true,"text":[{"text":"            BaseType::Map(key, value) => return format!(\"map[{}]{}\", self.map_type_to_go(key), self.map_type_to_go(value)),","highlight_start":70,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/go.rs","byte_start":7821,"byte_end":7825,"line_start":175,"line_end":175,"column_start":96,"column_end":100,"is_primary":true,"text":[{"text":"            BaseType::Map(key, value) => return format!(\"map[{}]{}\", self.map_type_to_go(key), self.map_type_to_go(value)),","highlight_start":96,"highlight_end":100}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: parameter is only used in recursion\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/go.rs:160:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn map_type_to_go(&self, type_ref: &TypeReference) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: parameter used here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/go.rs:174:62\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            BaseType::Array(inner) => return format!(\"[]{}\", self.map_type_to_go(inner)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            BaseType::Map(key, value) => return format!(\"map[{}]{}\", self.map_type_to_go(key), self.map_type_to_go(value)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"parameter is only used in recursion","code":{"code":"clippy::only_used_in_recursion","explanation":null},"level":"error","spans":[{"file_name":"src/generators/typescript.rs","byte_start":8570,"byte_end":8574,"line_start":184,"line_end":184,"column_start":32,"column_end":36,"is_primary":true,"text":[{"text":"    fn map_type_to_typescript(&self, type_ref: &TypeReference) -> String {","highlight_start":32,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"parameter used here","code":null,"level":"note","spans":[{"file_name":"src/generators/typescript.rs","byte_start":9244,"byte_end":9248,"line_start":198,"line_end":198,"column_start":62,"column_end":66,"is_primary":true,"text":[{"text":"            BaseType::Array(inner) => return format!(\"{}[]\", self.map_type_to_typescript(inner)),","highlight_start":62,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":9355,"byte_end":9359,"line_start":199,"line_end":199,"column_start":75,"column_end":79,"is_primary":true,"text":[{"text":"            BaseType::Map(key, value) => return format!(\"Record<{}, {}>\", self.map_type_to_typescript(key), self.map_type_to_typescript(value)),","highlight_start":75,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/generators/typescript.rs","byte_start":9389,"byte_end":9393,"line_start":199,"line_end":199,"column_start":109,"column_end":113,"is_primary":true,"text":[{"text":"            BaseType::Map(key, value) => return format!(\"Record<{}, {}>\", self.map_type_to_typescript(key), self.map_type_to_typescript(value)),","highlight_start":109,"highlight_end":113}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: parameter is only used in recursion\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/typescript.rs:184:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn map_type_to_typescript(&self, type_ref: &TypeReference) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: parameter used here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/typescript.rs:198:62\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            BaseType::Array(inner) => return format!(\"{}[]\", self.map_type_to_typescript(inner)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            BaseType::Map(key, value) => return format!(\"Record<{}, {}>\", self.map_type_to_typescript(key), self.map_type_to_typescript(value)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"calls to `push` immediately after creation","code":{"code":"clippy::vec_init_then_push","explanation":null},"level":"error","spans":[{"file_name":"src/generators/test_generators/java.rs","byte_start":17009,"byte_end":18533,"line_start":581,"line_end":623,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        let mut config_files = vec![];","highlight_start":9,"highlight_end":39},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // JUnit 5 configuration","highlight_start":1,"highlight_end":33},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"junit-platform.properties\".to_string(),","highlight_start":1,"highlight_end":59},{"text":"            path: PathBuf::from(\"src/test/resources/junit-platform.properties\"),","highlight_start":1,"highlight_end":81},{"text":"            content: r#\"# JUnit 5 Configuration","highlight_start":1,"highlight_end":48},{"text":"# Generated by SDK Generator","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"junit.jupiter.testinstance.lifecycle.default=per_class","highlight_start":1,"highlight_end":55},{"text":"junit.jupiter.execution.parallel.enabled=true","highlight_start":1,"highlight_end":46},{"text":"junit.jupiter.execution.parallel.mode.default=same_thread","highlight_start":1,"highlight_end":58},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Mockito configuration","highlight_start":1,"highlight_end":33},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"mockito-extensions\".to_string(),","highlight_start":1,"highlight_end":52},{"text":"            path: PathBuf::from(\"src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker\"),","highlight_start":1,"highlight_end":104},{"text":"            content: \"mock-maker-inline\\n\".to_string(),","highlight_start":1,"highlight_end":56},{"text":"        });","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Test logging configuration","highlight_start":1,"highlight_end":38},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"logback-test.xml\".to_string(),","highlight_start":1,"highlight_end":50},{"text":"            path: PathBuf::from(\"src/test/resources/logback-test.xml\"),","highlight_start":1,"highlight_end":72},{"text":"            content: r#\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>","highlight_start":1,"highlight_end":63},{"text":"<configuration>","highlight_start":1,"highlight_end":16},{"text":"    <appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">","highlight_start":1,"highlight_end":74},{"text":"        <encoder>","highlight_start":1,"highlight_end":18},{"text":"            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>","highlight_start":1,"highlight_end":88},{"text":"        </encoder>","highlight_start":1,"highlight_end":19},{"text":"    </appender>","highlight_start":1,"highlight_end":16},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    <root level=\"INFO\">","highlight_start":1,"highlight_end":24},{"text":"        <appender-ref ref=\"CONSOLE\"/>","highlight_start":1,"highlight_end":38},{"text":"    </root>","highlight_start":1,"highlight_end":12},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    <!-- Set test-specific log levels -->","highlight_start":1,"highlight_end":42},{"text":"    <logger name=\"com.example.client\" level=\"DEBUG\"/>","highlight_start":1,"highlight_end":54},{"text":"</configuration>","highlight_start":1,"highlight_end":17},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`-D clippy::vec-init-then-push` implied by `-D warnings`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to override `-D warnings` add `#[allow(clippy::vec_init_then_push)]`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using the `vec![]` macro","code":null,"level":"help","spans":[{"file_name":"src/generators/test_generators/java.rs","byte_start":17009,"byte_end":18533,"line_start":581,"line_end":623,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        let mut config_files = vec![];","highlight_start":9,"highlight_end":39},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // JUnit 5 configuration","highlight_start":1,"highlight_end":33},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"junit-platform.properties\".to_string(),","highlight_start":1,"highlight_end":59},{"text":"            path: PathBuf::from(\"src/test/resources/junit-platform.properties\"),","highlight_start":1,"highlight_end":81},{"text":"            content: r#\"# JUnit 5 Configuration","highlight_start":1,"highlight_end":48},{"text":"# Generated by SDK Generator","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"junit.jupiter.testinstance.lifecycle.default=per_class","highlight_start":1,"highlight_end":55},{"text":"junit.jupiter.execution.parallel.enabled=true","highlight_start":1,"highlight_end":46},{"text":"junit.jupiter.execution.parallel.mode.default=same_thread","highlight_start":1,"highlight_end":58},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Mockito configuration","highlight_start":1,"highlight_end":33},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"mockito-extensions\".to_string(),","highlight_start":1,"highlight_end":52},{"text":"            path: PathBuf::from(\"src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker\"),","highlight_start":1,"highlight_end":104},{"text":"            content: \"mock-maker-inline\\n\".to_string(),","highlight_start":1,"highlight_end":56},{"text":"        });","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Test logging configuration","highlight_start":1,"highlight_end":38},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"logback-test.xml\".to_string(),","highlight_start":1,"highlight_end":50},{"text":"            path: PathBuf::from(\"src/test/resources/logback-test.xml\"),","highlight_start":1,"highlight_end":72},{"text":"            content: r#\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>","highlight_start":1,"highlight_end":63},{"text":"<configuration>","highlight_start":1,"highlight_end":16},{"text":"    <appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">","highlight_start":1,"highlight_end":74},{"text":"        <encoder>","highlight_start":1,"highlight_end":18},{"text":"            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>","highlight_start":1,"highlight_end":88},{"text":"        </encoder>","highlight_start":1,"highlight_end":19},{"text":"    </appender>","highlight_start":1,"highlight_end":16},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    <root level=\"INFO\">","highlight_start":1,"highlight_end":24},{"text":"        <appender-ref ref=\"CONSOLE\"/>","highlight_start":1,"highlight_end":38},{"text":"    </root>","highlight_start":1,"highlight_end":12},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    <!-- Set test-specific log levels -->","highlight_start":1,"highlight_end":42},{"text":"    <logger name=\"com.example.client\" level=\"DEBUG\"/>","highlight_start":1,"highlight_end":54},{"text":"</configuration>","highlight_start":1,"highlight_end":17},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12}],"label":null,"suggested_replacement":"let config_files = vec![..];","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: calls to `push` immediately after creation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/test_generators/java.rs:581:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m581\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut config_files = vec![];\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m582\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m583\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        // JUnit 5 configuration\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m584\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        config_files.push(ConfigFile {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m622\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\"#.to_string(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m623\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        });\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|___________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: consider using the `vec![]` macro: `let config_files = vec![..];`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `-D clippy::vec-init-then-push` implied by `-D warnings`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to override `-D warnings` add `#[allow(clippy::vec_init_then_push)]`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"calls to `push` immediately after creation","code":{"code":"clippy::vec_init_then_push","explanation":null},"level":"error","spans":[{"file_name":"src/generators/test_generators/typescript.rs","byte_start":11856,"byte_end":13325,"line_start":402,"line_end":466,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        let mut config_files = vec![];","highlight_start":9,"highlight_end":39},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Jest configuration","highlight_start":1,"highlight_end":30},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"jest.config.js\".to_string(),","highlight_start":1,"highlight_end":48},{"text":"            path: PathBuf::from(\"jest.config.js\"),","highlight_start":1,"highlight_end":51},{"text":"            content: r#\"/** @type {import('jest').Config} */","highlight_start":1,"highlight_end":61},{"text":"module.exports = {","highlight_start":1,"highlight_end":19},{"text":"  preset: 'ts-jest',","highlight_start":1,"highlight_end":21},{"text":"  testEnvironment: 'node',","highlight_start":1,"highlight_end":27},{"text":"  roots: ['<rootDir>/src', '<rootDir>/tests'],","highlight_start":1,"highlight_end":47},{"text":"  testMatch: [","highlight_start":1,"highlight_end":15},{"text":"    '**/__tests__/**/*.+(ts|tsx|js)',","highlight_start":1,"highlight_end":38},{"text":"    '**/*.(test|spec).+(ts|tsx|js)'","highlight_start":1,"highlight_end":36},{"text":"  ],","highlight_start":1,"highlight_end":5},{"text":"  transform: {","highlight_start":1,"highlight_end":15},{"text":"    '^.+\\\\.(ts|tsx)$': 'ts-jest',","highlight_start":1,"highlight_end":34},{"text":"  },","highlight_start":1,"highlight_end":5},{"text":"  collectCoverageFrom: [","highlight_start":1,"highlight_end":25},{"text":"    'src/**/*.{ts,tsx}',","highlight_start":1,"highlight_end":25},{"text":"    '!src/**/*.d.ts',","highlight_start":1,"highlight_end":22},{"text":"  ],","highlight_start":1,"highlight_end":5},{"text":"  coverageDirectory: 'coverage',","highlight_start":1,"highlight_end":33},{"text":"  coverageReporters: [","highlight_start":1,"highlight_end":23},{"text":"    'text',","highlight_start":1,"highlight_end":12},{"text":"    'lcov',","highlight_start":1,"highlight_end":12},{"text":"    'html',","highlight_start":1,"highlight_end":12},{"text":"  ],","highlight_start":1,"highlight_end":5},{"text":"  coverageThreshold: {","highlight_start":1,"highlight_end":23},{"text":"    global: {","highlight_start":1,"highlight_end":14},{"text":"      branches: 80,","highlight_start":1,"highlight_end":20},{"text":"      functions: 80,","highlight_start":1,"highlight_end":21},{"text":"      lines: 80,","highlight_start":1,"highlight_end":17},{"text":"      statements: 80,","highlight_start":1,"highlight_end":22},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"  },","highlight_start":1,"highlight_end":5},{"text":"  setupFilesAfterEnv: ['<rootDir>/tests/setup.ts'],","highlight_start":1,"highlight_end":52},{"text":"};","highlight_start":1,"highlight_end":3},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Test setup file","highlight_start":1,"highlight_end":27},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"setup.ts\".to_string(),","highlight_start":1,"highlight_end":42},{"text":"            path: PathBuf::from(\"tests/setup.ts\"),","highlight_start":1,"highlight_end":51},{"text":"            content: r#\"// Test setup file","highlight_start":1,"highlight_end":43},{"text":"// Generated by SDK Generator","highlight_start":1,"highlight_end":30},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// Global test setup","highlight_start":1,"highlight_end":21},{"text":"beforeAll(() => {","highlight_start":1,"highlight_end":18},{"text":"  // Setup code that runs before all tests","highlight_start":1,"highlight_end":43},{"text":"});","highlight_start":1,"highlight_end":4},{"text":"","highlight_start":1,"highlight_end":1},{"text":"afterAll(() => {","highlight_start":1,"highlight_end":17},{"text":"  // Cleanup code that runs after all tests","highlight_start":1,"highlight_end":44},{"text":"});","highlight_start":1,"highlight_end":4},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// Mock global fetch if not available","highlight_start":1,"highlight_end":38},{"text":"if (!global.fetch) {","highlight_start":1,"highlight_end":21},{"text":"  global.fetch = jest.fn();","highlight_start":1,"highlight_end":28},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// Custom matchers or global test utilities can go here","highlight_start":1,"highlight_end":56},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using the `vec![]` macro","code":null,"level":"help","spans":[{"file_name":"src/generators/test_generators/typescript.rs","byte_start":11856,"byte_end":13325,"line_start":402,"line_end":466,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        let mut config_files = vec![];","highlight_start":9,"highlight_end":39},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Jest configuration","highlight_start":1,"highlight_end":30},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"jest.config.js\".to_string(),","highlight_start":1,"highlight_end":48},{"text":"            path: PathBuf::from(\"jest.config.js\"),","highlight_start":1,"highlight_end":51},{"text":"            content: r#\"/** @type {import('jest').Config} */","highlight_start":1,"highlight_end":61},{"text":"module.exports = {","highlight_start":1,"highlight_end":19},{"text":"  preset: 'ts-jest',","highlight_start":1,"highlight_end":21},{"text":"  testEnvironment: 'node',","highlight_start":1,"highlight_end":27},{"text":"  roots: ['<rootDir>/src', '<rootDir>/tests'],","highlight_start":1,"highlight_end":47},{"text":"  testMatch: [","highlight_start":1,"highlight_end":15},{"text":"    '**/__tests__/**/*.+(ts|tsx|js)',","highlight_start":1,"highlight_end":38},{"text":"    '**/*.(test|spec).+(ts|tsx|js)'","highlight_start":1,"highlight_end":36},{"text":"  ],","highlight_start":1,"highlight_end":5},{"text":"  transform: {","highlight_start":1,"highlight_end":15},{"text":"    '^.+\\\\.(ts|tsx)$': 'ts-jest',","highlight_start":1,"highlight_end":34},{"text":"  },","highlight_start":1,"highlight_end":5},{"text":"  collectCoverageFrom: [","highlight_start":1,"highlight_end":25},{"text":"    'src/**/*.{ts,tsx}',","highlight_start":1,"highlight_end":25},{"text":"    '!src/**/*.d.ts',","highlight_start":1,"highlight_end":22},{"text":"  ],","highlight_start":1,"highlight_end":5},{"text":"  coverageDirectory: 'coverage',","highlight_start":1,"highlight_end":33},{"text":"  coverageReporters: [","highlight_start":1,"highlight_end":23},{"text":"    'text',","highlight_start":1,"highlight_end":12},{"text":"    'lcov',","highlight_start":1,"highlight_end":12},{"text":"    'html',","highlight_start":1,"highlight_end":12},{"text":"  ],","highlight_start":1,"highlight_end":5},{"text":"  coverageThreshold: {","highlight_start":1,"highlight_end":23},{"text":"    global: {","highlight_start":1,"highlight_end":14},{"text":"      branches: 80,","highlight_start":1,"highlight_end":20},{"text":"      functions: 80,","highlight_start":1,"highlight_end":21},{"text":"      lines: 80,","highlight_start":1,"highlight_end":17},{"text":"      statements: 80,","highlight_start":1,"highlight_end":22},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"  },","highlight_start":1,"highlight_end":5},{"text":"  setupFilesAfterEnv: ['<rootDir>/tests/setup.ts'],","highlight_start":1,"highlight_end":52},{"text":"};","highlight_start":1,"highlight_end":3},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Test setup file","highlight_start":1,"highlight_end":27},{"text":"        config_files.push(ConfigFile {","highlight_start":1,"highlight_end":39},{"text":"            name: \"setup.ts\".to_string(),","highlight_start":1,"highlight_end":42},{"text":"            path: PathBuf::from(\"tests/setup.ts\"),","highlight_start":1,"highlight_end":51},{"text":"            content: r#\"// Test setup file","highlight_start":1,"highlight_end":43},{"text":"// Generated by SDK Generator","highlight_start":1,"highlight_end":30},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// Global test setup","highlight_start":1,"highlight_end":21},{"text":"beforeAll(() => {","highlight_start":1,"highlight_end":18},{"text":"  // Setup code that runs before all tests","highlight_start":1,"highlight_end":43},{"text":"});","highlight_start":1,"highlight_end":4},{"text":"","highlight_start":1,"highlight_end":1},{"text":"afterAll(() => {","highlight_start":1,"highlight_end":17},{"text":"  // Cleanup code that runs after all tests","highlight_start":1,"highlight_end":44},{"text":"});","highlight_start":1,"highlight_end":4},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// Mock global fetch if not available","highlight_start":1,"highlight_end":38},{"text":"if (!global.fetch) {","highlight_start":1,"highlight_end":21},{"text":"  global.fetch = jest.fn();","highlight_start":1,"highlight_end":28},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"// Custom matchers or global test utilities can go here","highlight_start":1,"highlight_end":56},{"text":"\"#.to_string(),","highlight_start":1,"highlight_end":16},{"text":"        });","highlight_start":1,"highlight_end":12}],"label":null,"suggested_replacement":"let config_files = vec![..];","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: calls to `push` immediately after creation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/generators/test_generators/typescript.rs:402:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut config_files = vec![];\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m404\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        // Jest configuration\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m405\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        config_files.push(ConfigFile {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m465\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\"#.to_string(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m466\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        });\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|___________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: consider using the `vec![]` macro: `let config_files = vec![..];`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 15 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 15 previous errors\u001b[0m\n\n"}
